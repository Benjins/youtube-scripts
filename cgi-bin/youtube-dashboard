#!/run/current-system/sw/bin/zsh

# Use zsh above because bash doesn't find the UTF-8 locales on NixOS which tmux needs

set -eu -o pipefail

function strip_trailing_empty_lines() {
	# https://stackoverflow.com/questions/7359527
	sed -e :a -e '/^\n*$/{$d;N;};/\n$/ba'
}

function html_escape() {
	# https://stackoverflow.com/a/12873723
    sed 's/&/\&amp;/g; s/</\&lt;/g; s/>/\&gt;/g; s/"/\&quot;/g; s/'"'"'/\&#39;/g'
}

function linkify_log() {
	sed -r 's,^\[youtube\] (.{11}),[youtube] <a href="https://www.youtube.com/watch?v=\1" target="_blank">\1</a>,g' |\
	sed -r 's,^Skipping (.{11}) because,Skipping <a href="https://www.youtube.com/watch?v=\1" target="_blank">\1</a> because,g' |\
	sed -r 's,-(.{11})(\.jpg|\.annotations\.xml|\.info\.json|(\.f[0-9]+)?\.(webm|mp4|m4a)),-<a href="https://www.youtube.com/watch?v=\1" target="_blank">\1</a>\2,g' |\
	sed -r 's,^\[youtube:playlist\] (.{24}):,[youtube:playlist] <a href="https://www.youtube.com/playlist?list=\1" target="_blank">\1</a>:,g' |\
	sed -r 's,^(ERROR: .*)$,<span class="error">\1</span>,g' |\
	sed -r 's,(^\[download\] Downloading video [0-9]+ of [0-9]+)$,<span class="download">\1</span>,g' |\
	sed -r 's, of (~?)([\.0-9]+GiB) , of \1<span class="large-video-size">\2</span> ,g' |\
	sed -r 's,^([‚îå‚îÇ‚îî].*)$,<span class="monospace">\1</span>,g'
}

function url_for_identifier() {
	if [[ $1 == UC?????????????????????? ]]; then
		echo "https://www.youtube.com/channel/$1/videos"
	elif [[ $1 == PL* ]]; then
		echo "https://www.youtube.com/playlist?list=$1"
	else
		echo "https://www.youtube.com/user/$1/videos"
	fi
}

sessions=$(tmux list-sessions -F '#{session_created} #S' | grep -P '^\d+ YouTube-' | sort -rn)

echo "Content-Type: text/html; charset=utf-8

<html lang=\"en\">

<head>
<title>YouTube tasks</title>
<meta name=\"referrer\" content=\"no-referrer\">
<meta name=\"google\" content=\"notranslate\">
<style>

body {
	background-color: #ddd;
	color: black;
	font-family: system-ui, sans-serif;
	padding: 24px;
}

h1 {
	font-size: 18px;
	margin: 0 0 0 7px;
}

a {
	color: black;
	text-decoration: none;
}

pre {
	font-size: 13px;
	font-family: system-ui, sans-serif;
	background-color: #fff;
	width: calc(100% - 12px);
	display: inline-block;
	padding: 5px;
	margin: 0 0 1em 0;
}

pre.task {
	height: 200px;
	overflow-y: scroll;
}

.monospace {
	font-size: 10pt;
	font-family: monospace;
}

span.error {
	color: #dd0000;
}

span.download {
	font-weight: bold;
}

span.large-video-size {
	font-weight: bold;
	background-color: purple;
	color: white;
}

</style>
</head>

$(echo $sessions | wc -l) downloaders running. Press F5 to refresh ü§∑Ô∏è<br><br>
"

typeset -A monitored_by_script
monitored_by_script=()
for i in $(ps w | grep -P -o 'wait-for-youtube-[t]ask .*' | cut -d ' ' -f 2); do
	monitored_by_script[$i]=1
done

tmux list-sessions -F '#{session_created} #S' | grep -P '^\d+ YouTube-' | sort -rn |\
while read line; do
	session_name=$(echo -E "$line" | cut -d ' ' -f 2)
	identifier=${session_name/YouTube-/}
	url=$(url_for_identifier "$identifier")
	monitored="unmonitored"
	set +u
	if [[ $monitored_by_script[$identifier] == "1" ]]; then
		monitored="monitored"
	fi
	set -u
	echo "<h1><a name=\"$identifier\" href=\"$url\" target=\"_blank\">$identifier</a> (<a href=\"/logs/dl/$identifier/?C=M;O=D\" target=\"_blank\">logs</a>) ($monitored)</h1>"
	echo "<pre class=\"task\">"
	# Session may already be gone by the time we try to capture it
	{ tmux capture-pane -p -t "$session_name" || echo -n "" } | strip_trailing_empty_lines | html_escape | linkify_log
	echo "</pre>"
done

scripts=$(ps w | grep -P '[b]in/grab-.*-youtube' | sed -r 's/^ +//' | sed -r 's/ +/\t/g' | sort -k +5)

echo "
<h1>$(echo $scripts | wc -l) scripts running</h1>

<pre>
$(echo $scripts | html_escape)
</pre>
"

echo "
<h1>Task distribution</h1>

<pre>"
for i in scale8 scale9 scale10 scale11 scale12 scale13 oneams1 finssd1 finhdd1; do
	count=$(pgrep --count -f "^ssh -p 904 at@$i " || true)
	echo "$i\t$count"
done

echo "</pre>

<h1>$HOST df -hT</h1>
<pre class=\"monospace\">"

df -hT

echo "</pre>

<h1>$HOST du -d1 ~/YouTube | tail</h1>
<pre class=\"monospace\">"

du --block-size=\'1 -d1 ~/YouTube | sort -n | tail

echo "</pre>

<script>
for (const p of document.querySelectorAll('pre.task')) {
	p.scrollTop = p.scrollHeight;
}
</script>

</html>
"
